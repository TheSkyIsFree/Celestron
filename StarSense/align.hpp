#ifndef __ALIGN_H__
#define __ALIGN_H__

//==============================================================================================================================
// VAR: volatile uint32_t  AlignStepUT
//==============================================================================================================================
// DESC: the alignment step for autoalignment
//==============================================================================================================================
extern uint32_t                                                      //
  AlignStepUT;                                                  // the ss auto current alignment step 1-n (3 or 4 as default)



//==============================================================================================================================
// VAR: volatile uint32_t  AlignLastStepUT
//==============================================================================================================================
// DESC: the alignment step for autoalignment
//==============================================================================================================================
extern uint32_t                                                      //
  AlignLastStepUT;                                              // the last alignment step, or 0 if on first step



//==============================================================================================================================
// VAR: BOOL_D AlignIsEqAlignB
//==============================================================================================================================
// DESC: flag telescope alignment is EQ (GEM, or Wedge)
//==============================================================================================================================
extern BOOL_D
  AlignIsEqAlignB;                                              //



//==============================================================================================================================
// VAR: BOOL_D AlignIsGemB
//==============================================================================================================================
// DESC: flag telescope type is GEM
//==============================================================================================================================
extern BOOL_D
  AlignIsGemB;                                                  //



//==============================================================================================================================
// VAR: BOOL_D AlignUseUserAutoAlignB
//==============================================================================================================================
// DESC: flags either StarSense Auto or User Auto Align
//==============================================================================================================================
extern BOOL_D
  AlignUseUserAutoAlignB;                                       //



//==============================================================================================================================
// FUNC: Align_AutoPositionClearCurrentStep()
//==============================================================================================================================
// DESC: clear the current step
//==============================================================================================================================
void Align_AutoPositionClearCurrentStep(                        // RETR: none
  void                                                          // PASS: none
);



//==============================================================================================================================
// FUNC: Align_AutoPositionCurrentStep()
//==============================================================================================================================
// DESC: Gets the current align step -- sets the last align step before starting image capture
//==============================================================================================================================
extern uint32_t  Align_AutoPositionCurrentStep(                      // RETR: the current align step
  BOOL_D                                                        //
    SetLastStepB                                                // PASS: flag wether to set the last step value
);



//==============================================================================================================================
// FUNC: Align_AutoPositionFailCurrentStep()
//==============================================================================================================================
// DESC: clear the current step
//==============================================================================================================================
void Align_AutoPositionFailCurrentStep(                         // RETR: none
  void                                                          // PASS: none
);


//==============================================================================================================================
// FUNC: Align_AutoPositionInit()
//==============================================================================================================================
// DESC: performs the automatic move to "next" alignment position, based on the passed StepUT parameter
//==============================================================================================================================
extern void Align_AutoPositionInit(                     // RETR: none
  BOOL_D                                                        //
  IsGemB,                                                     // PASS: is telescope GEM or Alt/Azm (incl. wedged)
  BOOL_D                                                        //
  IsEqAlignB                                                  // PASS: is an eq alignment
);



//==============================================================================================================================
// FUNC: Align_AutoPositionNextMove()
//==============================================================================================================================
// DESC: performs the automatic move to "next" alignment position, based on the passed StepUT parameter
//==============================================================================================================================
extern BOOL_D Align_AutoPositionNextMove(                       // RETR: none
  int32_t                                                           //
    *Axis1PosSM,                                                // PASS: -> axis 1 (azm / ra) goto position
  int32_t                                                           //
    *Axis2PosSM                                                 // PASS: -> axis 2 (alt / dec) goto position
);



#ifdef __ALIGN_C__


#endif //#ifdef __C__
#endif //#ifndef __H__
