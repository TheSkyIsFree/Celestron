#ifndef __SKYLISA_H__
#define __SKYLISA_H__

//==============================================================================================================================
// standard header includes
//==============================================================================================================================
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdio.h>
#include "DmTypes.hpp"                                            // platform type and hardware specific definitions



//******************************************************************************************************************************
//******                                         global defines and typedefs                                            ********
//******************************************************************************************************************************
//#define PI              3.14159265359
#define ASPERRAD        206264.8062



typedef struct LisaStarTg {
  double                                                        // 8
    Xcen;
  double                                                        // 8
    Ycen;
  double                                                        // 8
    Intensity;
  double                                                        // 8
    RARad;
  double                                                        // 8
    DecRad;
} LisaStarTy;



typedef struct LisaPlateStarTg {
  float
    Xcen;
  float
    Ycen;
} LisaPlateStarTy;



typedef struct LisaGeoTransformTg {
  double
    Alfa;
  double
    Beta;
  double
    Gamma;
  double
    Theta;
  double
    U0;
  double
    V0;
} LisaGeoTransformTy;



typedef struct LisaAffTransformTg {
  double
    A;
  double
    B;
  double
    C;
  double
    D;
  double
    U0;
  double
    V0;
} LisaAffTransformTy;



typedef struct LisaMatchListTg {
  int                                                           // 4
    StarList1Index;
  int                                                           // 4
    StarList2Index;
  int                                                           // 4
    Votes;
  BOOL_D                                                         // 4
    Used;
} LisaMatchListTy;



//******************************************************************************************************************************
//******                                     exports of variables and functions                                         ********
//******************************************************************************************************************************

//==============================================================================================================================
// VAR:  PlateCountUT
//==============================================================================================================================
// DESC: The count of extracted plate stars from AIS camera
//==============================================================================================================================
extern uint32_t
  PlateCountUT;



//==============================================================================================================================
// VAR:  LisaCtrXRefSL, LisaCtrYRefSL
//==============================================================================================================================
// DESC: the CCD center coordinate reference cooresponding to the optical center
//==============================================================================================================================
extern int32_t
  LisaCtrXRefSL, LisaCtrYRefSL;



//==============================================================================================================================
// VAR:  Plate
//==============================================================================================================================
// DESC: The list of plate stars from AIS camera (x,y pairs)    //
//==============================================================================================================================
extern LisaPlateStarTy
  Plate[100];                                                   // 40 * 100 = 4000



//==============================================================================================================================
// VAR:  LisaPlateRaRad
//==============================================================================================================================
// DESC: The Ra center of the solved plate (radians)
//==============================================================================================================================
extern double
  LisaPlateRaRad;



//==============================================================================================================================
// VAR:  LisaPlateDecRad
//==============================================================================================================================
// DESC: The Dec center of the solved plate (radians)
//==============================================================================================================================
extern double
  LisaPlateDecRad;



//==============================================================================================================================
// FUNC: (static) LisaSolve_ScanQuadFile()
//==============================================================================================================================
// DESC: Sets the pointer to QUAD star database, calculates entries
//==============================================================================================================================
void LisaSolve_ScanQuadFile(
	FILE
		*QuadFileP,
	const uint32_t
		QuadFileOffsetUL,
	const uint32_t
		QuadFileSizeUL
);


//==============================================================================================================================
// FUNC: (static) LisaSolve_ScanAPMFile()
//==============================================================================================================================
// DESC: Sets the pointer to APM star database, calculates entries
//==============================================================================================================================
void LisaSolve_ScanAPMFile(
	FILE
		*StarFileP,
	const uint32_t
		StarFileOffsetUL,
	const uint32_t
		StarFileSizeUL
);


//==============================================================================================================================
// FUNC: LisaSolve_SphericalProject()
//==============================================================================================================================
// DESC: use LISA to project Ra, Dec to x,y coords
//==============================================================================================================================
extern void LisaSolve_SphericalProject(                          //
  double                                                        //
    RaRadF,                                                     //
  double                                                        //
    DecRadF,                                                    //
  double                                                        //
    *Xcen,                                                      //
  double                                                        //
    *Ycen                                                       //
);



//==============================================================================================================================
// FUNC: LisaSolve_Solve()
//==============================================================================================================================
// DESC: use LISA to solve plate
//==============================================================================================================================
extern BOOL_D LisaSolve_Solve(
  void
);



#ifdef LISASOLVE_
//******************************************************************************************************************************
//******                                         local subsystem definitions                                            ********
//******************************************************************************************************************************

//==============================================================================================================================
// external header requirments for this module
//==============================================================================================================================
#include "lisa.h"
#include "lisaaff.h"
#include "lisasphr.h"


//==============================================================================================================================
// subsystem typedefs and defines
//==============================================================================================================================
typedef struct LisaApmTg {
  float
    RARad;
  float
    DecRad;
  int16_t
    Mag;
} LisaApmTy;



typedef struct LisaQuadTg {
  int32_t
    S[4];
  float
    D[6];
} LisaQuadTy;



//==============================================================================================================================
// subsystem static function prototypes
//==============================================================================================================================



#endif //#ifdef LISASOLVE_

#endif //#ifndef __SKYLISA_H__
